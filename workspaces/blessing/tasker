#!/usr/bin/env bash
set -e

SELF_PATH=$(cd -P -- "$(dirname -- "$0")" && pwd -P) && SELF_PATH=$SELF_PATH/$(basename -- "$0")
SELF_DIR=$(dirname $SELF_PATH)
ROOT_DIR="$SELF_DIR/../.."
WORKSPACES_DIR="$ROOT_DIR/workspaces"
WORKSPACE_FRONTEND="$ROOT_DIR/workspaces/frontend"
WORKSPACE_PRODUCERS="$ROOT_DIR/workspaces/producers"

ESLINT_CONFIG="$ROOT_DIR/.eslintrc.js"
ESLINT_IGNORE_CONFIG="$ROOT_DIR/.eslintignore"
ESLINT_FILES="$WORKSPACES_DIR"
ESLINT_COMMAND="eslint --ignore-path $ESLINT_IGNORE_CONFIG --config $ESLINT_CONFIG $ESLINT_FILES"

PRETTIER_CONFIG="$ROOT_DIR/.prettierrc.js"
PRETTIER_CSS_FILES=($WORKSPACE_FRONTEND'/sass/**/*.scss')
PRETTIER_CSS_COMMAND="prettier --config $PRETTIER_CONFIG '$PRETTIER_CSS_FILES' --parser=css"

WEBPACK_CONFIG="$SELF_DIR/webpack.config.js"

if [ ! -f $ROOT_DIR/node_modules/@thecotne/tasker/tasker-core ]; then
  yarn --frozen-lockfile
fi

source $ROOT_DIR/node_modules/@thecotne/tasker/tasker-core

function start { # Start Development Server
  if [[ "$1" = "--production" ]]; then
    webpack serve --config $WEBPACK_CONFIG --mode=production
  else
    webpack serve --config $WEBPACK_CONFIG --mode=development
  fi
}

function build { # Compile Assets
  clean

  if [[ "$1" = "--production" ]]; then
    webpack --config $WEBPACK_CONFIG --mode=production
  else
    webpack --config $WEBPACK_CONFIG --mode=development
  fi
}

function watch { # Compile Assets And Watch For Changes
  clean

  if [[ "$1" = "--production" ]]; then
    webpack --config $WEBPACK_CONFIG --mode=production --watch
  else
    webpack --config $WEBPACK_CONFIG --mode=development --watch
  fi
}

function clean { # Remove built files
  rm -vrf $(_path_normalize $WORKSPACE_FRONTEND/public)
  rm -vrf $(_path_normalize $ROOT_DIR/public)
}

function test { # Run Tests
  prettier-css-lint
  lint
  ts-check
}

function prettier-css { # Prettier CSS
  eval "$PRETTIER_CSS_COMMAND --write"
}

function prettier-css-lint { # Prettier CSS Lint
  eval "$PRETTIER_CSS_COMMAND --list-different"
}

function lint { # Lint Project Files
  eval "$ESLINT_COMMAND ${@}"
}

function ts-check { # Type Check Code With Typescript
  ts-check-frontend
  ts-check-producers
}

function ts-check-frontend { # Type Check 'frontend' Code With Typescript
  tsc -p "$WORKSPACE_FRONTEND/tsconfig.json"
}

function ts-check-producers { # Type Check 'producers' Code With Typescript
  tsc -p "$WORKSPACE_PRODUCERS/tsconfig.json"
}

function _path_normalize {
  node -e "
    const path = require('path');
    process.stdout.write(
      path.normalize(process.argv[1])
    )
  " $1
}

function _path_relative {
  node -e "
    const path = require('path');
    process.stdout.write(
      path.relative(process.argv[1], process.argv[2])
    )
  " $1 $2
}

function _grep {
  if hash ggrep 2>/dev/null; then
    ggrep --color "$@"
  else
    grep --color "$@"
  fi
}

_bootstrap "${@}"
